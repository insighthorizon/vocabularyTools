./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
./voct.sh: line 45: [: missing `]'
./voct.sh: line 45: : command not found
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
./voct.sh: line 43: [: missing `]'
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
./voct.sh: line 43: [: !=: unary operator expected
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
bratrství

bratrství

bratrství

bratrství

bratrství

bratrství

bratrství

bratrství

bratrství

bratrství

bratrství
fraternity
bratrství
fratternity
bratrství
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
bratrství
fraternity
bratrství
^C
itwillwork@it:~/Documents/vocabularyTool$ cat vocSource.txt
reprimanded-potrestán
fraternity-bratrství
uncharted-nezmapováno
falter-váhat
dichotomy-dichotomie
contemporary-moderní
congruent-shodný
itwillwork@it:~/Documents/vocabularyTool$ cat vocSource.txt
reprimanded-potrestán
fraternity-bratrství
uncharted-nezmapováno
falter-váhat
dichotomy-dichotomie
contemporary-moderní
congruent-shodný
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt                               
fraternity
bratrství
fraternity
^C
itwillwork@it:~/Documents/vocabularyTool$ 
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
falter
falter
falter
falter
falter
falter
váhat
falter
falter
falter
^[OA^[OA^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
potrestán
bratrství
uncharted
potrestán
bratrství
bratrství
potrestán
shodný
dichotomie
potrestán
falter
falter
fraternity
contemporary
dichotomie
váhat
bratrství
reprimanded
congruent
nezmapováno
moderní
reprimanded
dichotomie
moderní
dichotomie
falter
moderní
uncharted
shodný
dichotomy
váhat
dichotomy
dichotomie
falter
congruent
váhat
váhat
dichotomy
uncharted
dichotomy
fraternity
uncharted
bratrství
reprimanded
potrestán
fraternity
nezmapováno
dichotomie
contemporary
uncharted
dichotomy
potrestán
moderní
congruent
váhat
nezmapováno
fraternity
reprimanded
congruent
potrestán
nezmapováno
nezmapováno
uncharted
congruent
dichotomy
dichotomie
shodný
uncharted
moderní
váhat
falter
contemporary
bratrství
uncharted
dichotomie
contemporary
moderní
congruent
congruent
dichotomie
potrestán
uncharted
bratrství
shodný
bratrství
dichotomy
váhat
fraternity
uncharted
uncharted
potrestán
dichotomy
dichotomy
váhat
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
váhat

uncharted

congruent

shodný

moderní

nezmapováno

moderní

dichotomy

uncharted

falter

dichotomy

váhat

contemporary

moderní
!
váhat
!
shodný
!
contemporary
!
shodný
!
falter
^X^[OD
potrestán
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
contemporary

fraternity

dichotomie

contemporary

dichotomy
!
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
./voct.sh: line 51: $2: ambiguous redirect

váhat

./voct.sh: line 51: $2: ambiguous redirect

uncharted

./voct.sh: line 51: $2: ambiguous redirect

contemporary

./voct.sh: line 51: $2: ambiguous redirect

falter

./voct.sh: line 51: $2: ambiguous redirect

dichotomie
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ERROR: Something went really wrong.

váhat
^[OA
ERROR: Something went really wrong.

dichotomy

ERROR: Something went really wrong.

dichotomie

ERROR: Something went really wrong.

uncharted

ERROR: Something went really wrong.

shodný
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ERROR: Something went really wrong.
./voct.sh: line 52: return: can only `return' from a function or sourced script

váhat

ERROR: Something went really wrong.
./voct.sh: line 52: return: can only `return' from a function or sourced script

uncharted
^C
itwillwork@it:~/Documents/vocabularyTool$ man exit
EXIT(3)                           Linux Programmer's Manual                           EXIT(3)

NAME
       exit - cause normal process termination

SYNOPSIS
       #include <stdlib.h>

       void exit(int status);

DESCRIPTION
EXIT(3)                           Linux Programmer's Manual                           EXIT(3)

NAME
       exit - cause normal process termination

SYNOPSIS
       #include <stdlib.h>

       void exit(int status);

DESCRIPTION
       The  exit()  function causes normal process termination and the value of status & 0377
       is returned to the parent (see wait(2)).

       All functions registered with atexit(3) and on_exit(3)  are  called,  in  the  reverse
       order  of  their  registration.   (It  is  possible  for one of these functions to use
       atexit(3) or on_exit(3) to register an additional function to be executed during  exit
       processing;  the  new registration is added to the front of the list of functions that
       remain to be called.)  If one of these functions  does  not  return  (e.g.,  it  calls
       _exit(2),  or  kills  itself  with  a signal), then none of the remaining functions is
       called, and further exit processing (in particular, flushing of stdio(3)  streams)  is
       abandoned.   If  a  function  has  been  registered  multiple times using atexit(3) or
       on_exit(3), then it is called as many times as it was registered.

       All open stdio(3) streams are flushed and closed.  Files  created  by  tmpfile(3)  are
       removed.

       The  C  standard  specifies  two constants, EXIT_SUCCESS and EXIT_FAILURE, that may be
       passed to exit() to indicate successful or unsuccessful termination, respectively.

RETURN VALUE
       The exit() function does not return.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌──────────┬───────────────┬─────────────────────┐
       │Interface │ Attribute     │ Value               │
       ├──────────┼───────────────┼─────────────────────┤
       │exit()    │ Thread safety │ MT-Unsafe race:exit │
       └──────────┴───────────────┴─────────────────────┘
       The exit() function uses a global variable that is not protected, so it is not thread-
       safe.

CONFORMING TO
       POSIX.1-2001, POSIX.1-2008, C89, C99, SVr4, 4.3BSD.

NOTES
       It  is  undefined  what happens if one of the functions registered using atexit(3) and
       on_exit(3) calls either exit() or longjmp(3).  Note that a call to  execve(2)  removes
       registrations created using atexit(3) and on_exit(3).

       The  use of EXIT_SUCCESS and EXIT_FAILURE is slightly more portable (to non-UNIX envi‐
       ronments) than the use of 0 and some nonzero value like 1 or -1.  In  particular,  VMS
       uses a different convention.
itwillwork@it:~/Documents/vocabularyTool$ 
itwillwork@it:~/Documents/vocabularyTool$ man -a exit
EXIT(3)                           Linux Programmer's Manual                           EXIT(3)

NAME
       exit - cause normal process termination

SYNOPSIS
       #include <stdlib.h>

       void exit(int status);

DESCRIPTION
       The  exit()  function causes normal process termination and the value of status & 0377
       is returned to the parent (see wait(2)).

       All functions registered with atexit(3) and on_exit(3)  are  called,  in  the  reverse
       order  of  their  registration.   (It  is  possible  for one of these functions to use
       atexit(3) or on_exit(3) to register an additional function to be executed during  exit
       processing;  the  new registration is added to the front of the list of functions that
       remain to be called.)  If one of these functions  does  not  return  (e.g.,  it  calls
       _exit(2),  or  kills  itself  with  a signal), then none of the remaining functions is
       called, and further exit processing (in particular, flushing of stdio(3)  streams)  is
       abandoned.   If  a  function  has  been  registered  multiple times using atexit(3) or
       on_exit(3), then it is called as many times as it was registered.

       All open stdio(3) streams are flushed and closed.  Files  created  by  tmpfile(3)  are
       removed.

       The  C  standard  specifies  two constants, EXIT_SUCCESS and EXIT_FAILURE, that may be
       passed to exit() to indicate successful or unsuccessful termination, respectively.

RETURN VALUE
       The exit() function does not return.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌──────────┬───────────────┬─────────────────────┐
       │Interface │ Attribute     │ Value               │
       ├──────────┼───────────────┼─────────────────────┤
       │exit()    │ Thread safety │ MT-Unsafe race:exit │
       └──────────┴───────────────┴─────────────────────┘
       The exit() function uses a global variable that is not protected, so it is not thread-
       safe.

CONFORMING TO
       POSIX.1-2001, POSIX.1-2008, C89, C99, SVr4, 4.3BSD.

NOTES
       It  is  undefined  what happens if one of the functions registered using atexit(3) and
       on_exit(3) calls either exit() or longjmp(3).  Note that a call to  execve(2)  removes
       registrations created using atexit(3) and on_exit(3).

       The  use of EXIT_SUCCESS and EXIT_FAILURE is slightly more portable (to non-UNIX envi‐
       ronments) than the use of 0 and some nonzero value like 1 or -1.  In  particular,  VMS
       uses a different convention.
--Man-- next: exit(2) [ view (return) | skip (Ctrl-D) | quit (Ctrl-C) ]

_EXIT(2)                          Linux Programmer's Manual                          _EXIT(2)
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt                               
ERROR: Something went really wrong.
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ERROR: Something went really wrong.
itwillwork@it:~/Documents/vocabularyTool$ echo $?
1
itwillwork@it:~/Documents/vocabularyTool$ 
itwillwork@it:~/Documents/vocabularyTool$ echo $?
0
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ERROR: Something went really wrong.
itwillwork@it:~/Documents/vocabularyTool$ echo $?
2
itwillwork@it:~/Documents/vocabularyTool$ echo $?
0
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
reprimanded
potrestán

moderní
contemporary

uncharted
nezmapováno

nezmapováno
uncharted

bratrství
fraternity

dichotomie
dichotomy

moderní
contemporary

bratrství
fraternity

váhat
falter

congruent
shodný

reprimanded
potrestán

congruent
shodný

contemporary
moderní

fraternity
bratrství

váhat
falter

moderní
contemporary

dichotomy
dichotomie

reprimanded
potrestán

shodný
congruent

shodný
congruent

potrestán
reprimanded

congruent
shodný
^C
itwillwork@it:~/Documents/vocabularyTool$ 
itwillwork@it:~/Documents/vocabularyTool$ 
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ASKING: congruent
EXPECTING: shodný
ASKING: moderní
EXPECTING: contemporary
ASKING: váhat
EXPECTING: falter
ASKING: contemporary
EXPECTING: moderní
ASKING: contemporary
EXPECTING: moderní
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: váhat
EXPECTING: falter
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: dichotomy
EXPECTING: dichotomie
ASKING: dichotomy
EXPECTING: dichotomie
ASKING: shodný
EXPECTING: congruent
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: váhat
EXPECTING: falter
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: moderní
EXPECTING: contemporary
ASKING: dichotomy
EXPECTING: dichotomie
ASKING: reprimanded
EXPECTING: potrestán
ASKING: dichotomy
EXPECTING: dichotomie
ASKING: dichotomy
EXPECTING: dichotomie
ASKING: váhat
EXPECTING: falter
ASKING: falter
EXPECTING: váhat
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: congruent
EXPECTING: shodný
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: potrestán
EXPECTING: reprimanded
ASKING: contemporary
EXPECTING: moderní
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: fraternity
EXPECTING: bratrství
ASKING: congruent
EXPECTING: shodný
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: váhat
EXPECTING: falter
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: congruent
EXPECTING: shodný
ASKING: bratrství
EXPECTING: fraternity
ASKING: shodný
EXPECTING: congruent
ASKING: contemporary
EXPECTING: moderní
ASKING: bratrství
EXPECTING: fraternity
ASKING: shodný
EXPECTING: congruent
ASKING: shodný
EXPECTING: congruent
ASKING: shodný
EXPECTING: congruent
ASKING: bratrství
EXPECTING: fraternity
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: moderní
EXPECTING: contemporary
ASKING: fraternity
EXPECTING: bratrství
ASKING: moderní
EXPECTING: contemporary
ASKING: congruent
EXPECTING: shodný
ASKING: shodný
EXPECTING: congruent
ASKING: contemporary
EXPECTING: moderní
ASKING: bratrství
EXPECTING: fraternity
ASKING: váhat
EXPECTING: falter
ASKING: contemporary
EXPECTING: moderní
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: congruent
EXPECTING: shodný
ASKING: congruent
EXPECTING: shodný
ASKING: bratrství
EXPECTING: fraternity
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: congruent
EXPECTING: shodný
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: bratrství
EXPECTING: fraternity
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: shodný
EXPECTING: congruent
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: dichotomie
EXPECTING: dichotomy
ASKING: falter
EXPECTING: váhat
ASKING: bratrství
EXPECTING: fraternity
ASKING: contemporary
EXPECTING: moderní
ASKING: potrestán
EXPECTING: reprimanded
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: contemporary
EXPECTING: moderní
ASKING: fraternity
EXPECTING: bratrství
ASKING: contemporary
EXPECTING: moderní
ASKING: fraternity
EXPECTING: bratrství
ASKING: contemporary
EXPECTING: moderní
ASKING: contemporary
EXPECTING: moderní
ASKING: shodný
EXPECTING: congruent
ASKING: váhat
EXPECTING: falter
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: potrestán
EXPECTING: reprimanded
ASKING: nezmapováno
EXPECTING: uncharted
ASKING: fraternity
EXPECTING: bratrství
ASKING: uncharted
EXPECTING: nezmapováno
ASKING: moderní
EXPECTING: contemporary
ASKING: váhat
EXPECTING: falter
ASKING: falter
EXPECTING: váhat
ASKING: uncharted
EXPECTING: nezmapováno
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ASKING: dichotomie
EXPECTING: dichotomy
./voct.sh: line 61: [: !=: unary operator expected
ASKING: falter
EXPECTING: váhat
./voct.sh: line 61: [: !=: unary operator expected
ASKING: bratrství
EXPECTING: fraternity
./voct.sh: line 61: [: !=: unary operator expected
ASKING: congruent
EXPECTING: shodný
./voct.sh: line 61: [: !=: unary operator expected
ASKING: uncharted
EXPECTING: nezmapováno
./voct.sh: line 61: [: !=: unary operator expected
ASKING: contemporary
EXPECTING: moderní
./voct.sh: line 61: [: !=: unary operator expected
ASKING: bratrství
EXPECTING: fraternity
./voct.sh: line 61: [: !=: unary operator expected
ASKING: dichotomie
EXPECTING: dichotomy
./voct.sh: line 61: [: !=: unary operator expected
ASKING: congruent
EXPECTING: shodný
./voct.sh: line 61: [: !=: unary operator expected
ASKING: shodný
EXPECTING: congruent
./voct.sh: line 61: [: !=: unary operator expected
ASKING: falter
EXPECTING: váhat
./voct.sh: line 61: [: !=: unary operator expected
ASKING: dichotomy
EXPECTING: dichotomie
./voct.sh: line 61: [: !=: unary operator expected
ASKING: váhat
EXPECTING: falter
./voct.sh: line 61: [: !=: unary operator expected
ASKING: dichotomie
EXPECTING: dichotomy
./voct.sh: line 61: [: !=: unary operator expected
ASKING: congruent
EXPECTING: shodný
./voct.sh: line 61: [: !=: unary operator expected
ASKING: shodný
EXPECTING: congruent
./voct.sh: line 61: [: !=: unary operator expected
ASKING: váhat
EXPECTING: falter
./voct.sh: line 61: [: !=: unary operator expected
ASKING: falter
EXPECTING: váhat
./voct.sh: line 61: [: !=: unary operator expected
ASKING: congruent
EXPECTING: shodný
./voct.sh: line 61: [: !=: unary operator expected
ASKING: váhat
EXPECTING: falter
./voct.sh: line 61: [: !=: unary operator expected
ASKING: reprimanded
EXPECTING: potrestán
./voct.sh: line 61: [: !=: unary operator expected
ASKING: uncharted
EXPECTING: nezmapováno
./voct.sh: line 61: [: !=: unary operator expected
ASKING: bratrství
EXPECTING: fraternity
./voct.sh: line 61: [: !=: unary operator expected
ASKING: shodný
EXPECTING: congruent
./voct.sh: line 61: [: !=: unary operator expected
ASKING: váhat
EXPECTING: falter
./voct.sh: line 61: [: !=: unary operator expected
ASKING: shodný
EXPECTING: congruent
./voct.sh: line 61: [: !=: unary operator expected
ASKING: dichotomie
EXPECTING: dichotomy
./voct.sh: line 61: [: !=: unary operator expected
ASKING: shodný
EXPECTING: congruent
./voct.sh: line 61: [: !=: unary operator expected
ASKING: dichotomy
EXPECTING: dichotomie
./voct.sh: line 61: [: !=: unary operator expected
ASKING: potrestán
EXPECTING: reprimanded
./voct.sh: line 61: [: !=: unary operator expected
ASKING: shodný
EXPECTING: congruent
./voct.sh: line 61: [: !=: unary operator expected
ASKING: contemporary
EXPECTING: moderní
./voct.sh: line 61: [: !=: unary operator expected
ASKING: moderní
EXPECTING: contemporary
./voct.sh: line 61: [: !=: unary operator expected
ASKING: váhat
EXPECTING: falter
./voct.sh: line 61: [: !=: unary operator expected
ASKING: dichotomy
EXPECTING: dichotomie
./voct.sh: line 61: [: !=: unary operator expected
ASKING: fraternity
EXPECTING: bratrství
./voct.sh: line 61: [: !=: unary operator expected
ASKING: falter
EXPECTING: váhat
./voct.sh: line 61: [: !=: unary operator expected
ASKING: nezmapováno
EXPECTING: uncharted
./voct.sh: line 61: [: !=: unary operator expected
ASKING: uncharted
EXPECTING: nezmapováno
./voct.sh: line 61: [: !=: unary operator expected
ASKING: fraternity
EXPECTING: bratrství
./voct.sh: line 61: [: !=: unary operator expected
ASKING: bratrství
EXPECTING: fraternity
./voct.sh: line 61: [: !=: unary operator expected
ASKING: contemporary
EXPECTING: moderní
./voct.sh: line 61: [: !=: unary operator expected
ASKING: contemporary
EXPECTING: moderní
./voct.sh: line 61: [: !=: unary operator expected
ASKING: moderní
EXPECTING: contemporary
./voct.sh: line 61: [: !=: unary operator expected
ASKING: uncharted
EXPECTING: nezmapováno
./voct.sh: line 61: [: !=: unary operator expected
ASKING: falter
EXPECTING: váhat
./voct.sh: line 61: [: !=: unary operator expected
ASKING: nezmapováno
EXPECTING: uncharted
./voct.sh: line 61: [: !=: unary operator expected
ASKING: contemporary
EXPECTING: moderní
./voct.sh: line 61: [: !=: unary operator expected
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
./voct.sh: line 57: n: command not found
./voct.sh: line 59: [: !=: unary operator expected
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
./voct.sh: line 57: n: command not found
ASKING: shodný
EXPECTING: congruent
^[OA
ASKING: shodný
EXPECTING: congruent

ASKING: shodný
EXPECTING: congruent
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
./voct.sh: line 58: [: !=: unary operator expected
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt


^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt


^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ASKING: reprimanded
EXPECTING: potrestán
potrestán
ASKING: reprimanded
EXPECTING: potrestán
potrestán
ASKING: reprimanded
EXPECTING: potrestán
^G^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ASKING: dichotomy
EXPECTING: dichotomie
dichotomy
ASKING: dichotomy
EXPECTING: dichotomie
dichotomie
ASKING: dichotomy
EXPECTING: dichotomie
dichotomie
ASKING: dichotomy
EXPECTING: dichotomie
!
ASKING: dichotomy
EXPECTING: dichotomie
!
ASKING: dichotomy
EXPECTING: dichotomie
? 
ASKING: dichotomy
EXPECTING: dichotomie
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
ASKING: reprimanded
EXPECTING: potrestán
potrestán
ASKING: dichotomy
EXPECTING: dichotomie
dichotomie
ASKING: uncharted
EXPECTING: nezmapováno
nezmapováno
ASKING: moderní
EXPECTING: contemporary
contemporary
ASKING: reprimanded
EXPECTING: potrestán
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: fraternity

Translate: fraternity

Translate: fraternity

Translate: fraternity

Translate: fraternity

Translate: fraternity

Translate: fraternity
f
Translate: fraternity
f
Translate: fraternity
f
Translate: fraternity
f
Translate: fraternity
f
Translate: fraternity
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný

Translate: shodný
congruent
Translate: congruent
shodný
Translate: nezmapováno
uncharted
Translate: contemporary
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: uncharted








ne
e^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: dichotomy

./voct.sh: line 65: ((: 2--: syntax error: operand expected (error token is "-")
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: reprimanded



potrestán
Translate: fraternity



bratrství
Translate: váhat
fether
foster
brather
falter
Translate: dichotomy
dichot
dichot
totot
dichotomie
Translate: moderní
^[OA^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: bratrství


fraternity
Translate: moderní
contemporary
Translate: shodný
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: fraternity
!
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: bratrství
?
./voct.sh: line 72: [: missing `]'
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: potrestán
?
reprimanded
Translate: nezmapováno
?
uncharted
Translate: dichotomie
?
dichotomy
Translate: potrestán
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: shodný

./voct.sh: line 69: [: =: unary operator expected
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: fraternity
!
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: bratrství
?
fraternity

Translate: nezmapováno
?
uncharted

Translate: contemporary
?
moderní

Translate: dichotomy
?
dichotomie

Translate: uncharted
?
nezmapováno

Translate: bratrství
?
fraternity

Translate: bratrství
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: uncharted

./voct.sh: line 69: [: =: unary operator expected

./voct.sh: line 69: [: =: unary operator expected
nezmapováno

Translate: bratrství

./voct.sh: line 69: [: =: unary operator expected
?
fraternity

Translate: moderní
?
contemporary

Translate: bratrství
^[OA^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: dichotomy
!
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: nezmapováno

./voct.sh: line 69: [: =: unary operator expected

./voct.sh: line 69: [: =: unary operator expected
uncharted

Translate: falter
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: shodný
congruent
Translate: falter
váhat
Translate: bratrství


fraternity

Translate: fraternity
baasgd
asdg
bratrství

Translate: shodný
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: bratrství


Right Answer: fraternity

Translate: dichotomie


Right Answer: dichotomy

Translate: dichotomy
^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: falter

Wrong entry (Translate: falter)
váhat
Translate: congruent
^C
itwillwork@it:~/Documents/vocabularyTool$ ^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: reprimanded

^[OA^C
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: dichotomie
dichotomy
Translate: congruent

Wrong entry (Translate: congruent)

Right Answer: shodný
Translate: dichotomy

Wrong entry (Translate: dichotomy)
dichotomie
Translate: congruent
shodný
Translate: shodný
congruent
Translate: uncharted
nezmapovaný
itwillwork@it:~/Documents/vocabularyTool$ ./voct.sh vocSource.txt
Translate: uncharted
!





























itwillwork@it:~/Documents/vocabularyTool$ ls
empty  vocSource.txt  vocSource.txt~  voct.sh  voct.sh~
itwillwork@it:~/Documents/vocabularyTool$ rm *~
itwillwork@it:~/Documents/vocabularyTool$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)




























                          Wrong entry (Translate: Willkommen an Bord!)
                                                !

























itwillwork@it:~/Documents/vocabularyTool$ 
itwillwork@it:~/Documents/vocabularyTool$ grep -Eo '{*}' voc_De1.txt
}
itwillwork@it:~/Documents/vocabularyTool$ grep -Eo '{[^{}]*}' voc_De1.txt                       
itwillwork@it:~/Documents/vocabularyTool$ grep -Eo '{[^{}]*}' voc_De1.txt
itwillwork@it:~/Documents/vocabularyTool$ grep -Eo '{[]*}' voc_De1.txt
grep: Unmatched [ or [^
itwillwork@it:~/Documents/vocabularyTool$ grep -Eo '{}' voc_De1.txt
itwillwork@it:~/Documents/vocabularyTool$ grep -Eo '{}' voc_De1.txt
itwillwork@it:~/Documents/vocabularyTool$ grep -Eo '}' voc_De1.txt
}
itwillwork@it:~/Documents/vocabularyTool$ grep -Eo '{}' voc_De1.txt                             
itwillwork@it:~/Documents/vocabularyTool$ man sed
SED(1)                                  User Commands                                  SED(1)

NAME
       sed - stream editor for filtering and transforming text

SYNOPSIS
       sed [OPTION]... {script-only-if-no-other-script} [input-file]...

DESCRIPTION
       Sed is a stream editor.  A stream editor is used to perform basic text transformations
       on an input stream (a file or input from a pipeline).  While in some ways  similar  to
       an editor which permits scripted edits (such as ed), sed works by making only one pass
       over the input(s), and is consequently more efficient.  But it  is  sed's  ability  to
       filter text in a pipeline which particularly distinguishes it from other types of edi‐
       tors.

       -n, --quiet, --silent

              suppress automatic printing of pattern space

       -e script, --expression=script

              add the script to the commands to be executed

       -f script-file, --file=script-file

              add the contents of script-file to the commands to be executed

       --follow-symlinks

              follow symlinks when processing in place

       -i[SUFFIX], --in-place[=SUFFIX]

              edit files in place (makes backup if SUFFIX supplied)

       -l N, --line-length=N

              specify the desired line-wrap length for the `l' command

       --posix

              disable all GNU extensions.

       -r, --regexp-extended

              use extended regular expressions in the script.

       -s, --separate

              consider files as separate rather than as a single continuous long stream.

       -u, --unbuffered

              load minimal amounts of data from the input files and flush the output  buffers
              more often

       -z, --null-data

              separate lines by NUL characters

       --help
              display this help and exit

       --version
              output version information and exit

       If no -e, --expression, -f, or --file option is given, then the first non-option argu‐
       ment is taken as the sed script to interpret.  All remaining arguments  are  names  of
       input files; if no input files are specified, then the standard input is read.

       GNU  sed  home page: <http://www.gnu.org/software/sed/>.  General help using GNU soft‐
       ware: <http://www.gnu.org/gethelp/>.  E-mail bug reports  to:  <bug-sed@gnu.org>.   Be
       sure to include the word ``sed'' somewhere in the ``Subject:'' field.

COMMAND SYNOPSIS
       This  is  just  a  brief  synopsis of sed commands to serve as a reminder to those who
       already know sed; other documentation (such as the texinfo document) must be consulted
       for fuller descriptions.

   Zero-address ``commands''
       : label
              Label for b and t commands.

       #comment
              The  comment  extends  until  the next newline (or the end of a -e script frag‐
              ment).

       }      The closing bracket of a { } block.

   Zero- or One- address commands
       =      Print the current line number.

       a \

       text   Append text, which has each embedded newline preceded by a backslash.

       i \

       text   Insert text, which has each embedded newline preceded by a backslash.

       q [exit-code]
              Immediately quit the sed script without processing any more input, except  that
              if  auto-print  is not disabled the current pattern space will be printed.  The
              exit code argument is a GNU extension.

       Q [exit-code]
              Immediately quit the sed script without processing any more input.  This  is  a
              GNU extension.

       r filename
              Append text read from filename.

       R filename
              Append  a line read from filename.  Each invocation of the command reads a line
              from the file.  This is a GNU extension.

   Commands which accept address ranges
       {      Begin a block of commands (end with a }).

       b label
              Branch to label; if label is omitted, branch to end of script.

       c \

       text   Replace the selected lines with text, which has each embedded newline  preceded
              by a backslash.

       d      Delete pattern space.  Start next cycle.

       D      If pattern space contains no newline, start a normal new cycle as if the d com‐
              mand was issued.  Otherwise, delete text in the pattern space up to  the  first
              newline,  and restart cycle with the resultant pattern space, without reading a
              new line of input.

       h H    Copy/append pattern space to hold space.

       g G    Copy/append hold space to pattern space.

       l      List out the current line in a ``visually unambiguous'' form.

       l width
              List out the current line in a ``visually unambiguous'' form,  breaking  it  at
              width characters.  This is a GNU extension.

       n N    Read/append the next line of input into the pattern space.

       p      Print the current pattern space.

       P      Print up to the first embedded newline of the current pattern space.

       s/regexp/replacement/
              Attempt to match regexp against the pattern space.  If successful, replace that
              portion matched with replacement.  The  replacement  may  contain  the  special
              character  &  to  refer to that portion of the pattern space which matched, and
              the special escapes \1 through \9 to refer to the corresponding  matching  sub-
              expressions in the regexp.

       t label
              If a s/// has done a successful substitution since the last input line was read
              and since the last t or T command, then branch to label; if label  is  omitted,
              branch to end of script.

       T label
              If  no  s///  has  done a successful substitution since the last input line was
              read and since the last t or T command, then branch to label; if label is omit‐
              ted, branch to end of script.  This is a GNU extension.

       w filename
              Write the current pattern space to filename.

       W filename
              Write  the  first line of the current pattern space to filename.  This is a GNU
              extension.

       x      Exchange the contents of the hold and pattern spaces.

       y/source/dest/
              Transliterate the characters in the pattern space which appear in source to the
              corresponding character in dest.

Addresses
       Sed  commands  can  be given with no addresses, in which case the command will be exe‐
       cuted for all input lines; with one address, in which case the command  will  only  be
       executed  for  input  lines  which match that address; or with two addresses, in which
       case the command will be executed for all input lines which match the inclusive  range
       of  lines starting from the first address and continuing to the second address.  Three
       things to note about address ranges: the syntax is addr1,addr2  (i.e.,  the  addresses
       are  separated by a comma); the line which addr1 matched will always be accepted, even
       if addr2 selects an earlier line; and if addr2 is a regexp,  it  will  not  be  tested
       against the line that addr1 matched.

       After  the  address  (or address-range), and before the command, a !  may be inserted,
       which specifies that the command shall only be executed if the  address  (or  address-
       range) does not match.

       The following address types are supported:

       number Match  only  the  specified  line  number (which increments cumulatively across
              files, unless the -s option is specified on the command line).

       first~step
              Match every step'th line starting with  line  first.   For  example,  ``sed  -n
              1~2p''  will  print  all  the  odd-numbered  lines in the input stream, and the
              address 2~5 will match every fifth line, starting with the second.   first  can
              be  zero;  in this case, sed operates as if it were equal to step.  (This is an
              extension.)

       $      Match the last line.

       /regexp/
              Match lines matching the regular expression regexp.

itwillwork@it:~/Documents/vocabularyTool$ sed .E '{}' voc_De1.txt                               
sed: -e expression #1, char 1: unknown command: `.'
itwillwork@it:~/Documents/vocabularyTool$ sed -E '{}' voc_De1.txt                               
die Freizeit-volný čas
faulenzen-lenošit
die Musik-hudba
Musik machen-hrát hudbu
der Volleyball-volejbal
Volleyball spielen-hrát volejbal
schlafen-spát
schwimmen-plavat
lesen-číst
tanzen-tancovat
willkommen-vítaný
an Bord-na palubě
Willkommen an Bord!-Vítejte na palubě!
das Schwimmbad-bazén
die Bar-bar
das Café-kavárna
die Bibliothek-knihovna
der Friseur-holič
das Krankenhaus-nemocnice
das Kino-kino
können-moci
{das Deck-paluba
der Film-film
Tischtennis spielen-hrát stolní tenis
tauschen-vyměnit
der Spaziergang-procházka
einen Spaziergang machen-jít na procházku}

itwillwork@it:~/Documents/vocabularyTool$ sed -E '/{.*}/' voc_De1.txt                           